function [data settings ] = load_data(data_file)
% Load binary data generated by autocorr
% [data settings ] = load_data(data_file) 
%
% data_file: The binary data file you want to load
%            Example:
%            load_data('/data/my_data.bin') 
%
% data: is a structure containing the data read. 
% If the data is not read correctly then it is most
% likely that the endian recorded in the data file is different from the endian
% on the system used to run this function.
%   Members of data:
%   data.cc_i, data.cc_j, data.cc
%
%   Correlation coefficient pairs (cc_i,cc_j) = cc
%   The first component of a pair (cc_i) is a vector containing
%   indices indexing into the time array, and the same is true for
%   the second component of a pair (cc_j). The correlation coefficients
%   for each pair(cc_i,cc_j) is stored in cc.
%   Example: cc_i = [1 2 3], cc_j = [7 8 9], cc = [0.32 0.45 0.61].
%   The first pair is: (1,7) with correlation coefficient 0.32.
%
% settings: is a structure containing the settings used to generate the data
% Members of settings:
% settings.sample_rate is the sampling rate of the data in samples/seconds (e.g. 0.04)
%
% settings.threshold is the detection criterion threshold given by
% scalar*1.253*MAD, where scalar is experimentally chosen. The MAD has been
% computed as the average of all the absolute value of all correlation
% coefficients by autocorr.
% 
% settings.lag: is the number of samples used for the window stride.
%
% settings.window_length is the number of samples used up by one window.
%
% settings.start_time: is the first sample read by autocorr. 
% 
% settings.end_time: is the last sample ready by autocorr.
%
% settings.start_lag: is the number of near-repeats skipped in samples.
%
% settings.number_of_pairs: is the number of pairs found by autocorr.
%
%
   cc_i = 0;
   cc_j = 0;
   cc = 0;
   settings = 0;

   %Constants
   DATA_HEADER_SIZE = 512;


   fid = fopen(data_file);

   settings = read_header(fid);
   data = read_data(DATA_HEADER_SIZE,settings.number_of_pairs,fid);

end      

% Read header section of file
function header = read_header(fid)
      header.sampling_rate = fread(fid, 1, 'float');  
      header.threshold = fread(fid, 1, 'float');  
      header.lag = fread(fid, 1, 'int');  
      header.window_length = fread(fid, 1, 'int');  
      header.start_time = fread(fid, 1, 'int');  
      header.end_time = fread(fid, 1, 'int');  
      header.start_lag = fread(fid, 1, 'int');  
      header.number_of_pairs = fread(fid, 1, 'int');  
      header.number_of_windows = fread(fid, 1, 'int');
end

function data = read_data(offset,len,fid)
     % Set file pointer at the beginning of the data section
     fseek(fid,offset,'bof');
     % Load data vector by vector
     data.cc_i = int32(fread(fid,len , 'int')); 
     data.cc_j = int32(fread(fid,len , 'int')); 
     data.cc = single(fread(fid,len , 'float')); 
end

